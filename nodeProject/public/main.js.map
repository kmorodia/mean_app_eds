{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/agepipe.pipe.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/employee-details/employee-details.component.ts","./src/app/components/employee-details/employee-details.component.html","./src/app/components/employee/employee.component.ts","./src/app/components/employee/employee.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/guards/auth.guard.ts","./src/app/highlight.directive.ts","./src/app/services/auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'agepipe'\n})\nexport class AgepipePipe implements PipeTransform {\n\n  transform(value: number): string {\n    return value.toString() + \" years old\";\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class = \"container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport{MatInputModule} from '@angular/material/input';\nimport{MatSelectModule} from '@angular/material/select';\nimport{MatButtonModule} from '@angular/material/button';\nimport{MatCheckboxModule} from '@angular/material/checkbox';\nimport{MatChipsModule} from '@angular/material/chips';\nimport{MatTableModule} from '@angular/material/table';\nimport{MatCardModule} from '@angular/material/card';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { EmployeeDetailsComponent } from './components/employee-details/employee-details.component';\n\nimport { AuthService } from './services/auth.service';\nimport {AuthGuard} from './guards/auth.guard';\nimport { HighlightDirective } from './highlight.directive';\nimport { AgepipePipe } from './agepipe.pipe';\n\nconst appRoutes: Routes = [\n  {path:'', component: LoginComponent},\n  {path:'employee', component: EmployeeComponent, canActivate:[AuthGuard]},\n  {path:'employee/:id', component: EmployeeDetailsComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    EmployeeComponent,\n    EmployeeDetailsComponent,\n    HighlightDirective,\n    AgepipePipe,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatTableModule,\n    MatCardModule\n  ],\n  providers: [AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\nimport {Pipe} from '@angular/core';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.scss']\n})\n\nexport class EmployeeDetailsComponent implements OnInit {\n\n  employeeID;\n  details;\n  constructor(\n    private route:ActivatedRoute,\n    private authService:AuthService\n    ){ }\n\n  ngOnInit(): void {\n    this.employeeID = parseInt(this.route.snapshot.paramMap.get('id'));\n    console.log(this.employeeID);\n    this.authService.loadTable();\n    this.details = this.authService.table[this.employeeID-1];\n    console.log(this.details);\n  }\n\n}\n","<br>\n<div class=\"main-div\">\n    <mat-card class=\"name-card\">\n        <mat-card-header>\n            <mat-card-title appHighlight>\n                {{details['employee_name'] | uppercase}}\n            </mat-card-title>\n            <mat-card-subtitle>employeeID: {{details['id']}}</mat-card-subtitle>\n        </mat-card-header>    \n        <mat-card-content>\n            Salary: {{details['employee_salary'] | currency}} <br>\n            Age: {{details['employee_age'] | agepipe}}\n        </mat-card-content>\n    </mat-card>    \n</div>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {TableStructure} from './tableStructure';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.scss']\n})\nexport class EmployeeComponent implements OnInit {\n\n  element_data: TableStructure[];\n  displayedColumns: string[] = ['ID','Name', 'Salary', 'Age', 'Details'];\n  dataSource = new MatTableDataSource<TableStructure>(this.element_data);\n\n  constructor(\n    private authService:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getEmployeeTable().subscribe(employeeTable => {\n      //console.log(employeeTable['data']);\n      this.authService.storeTable(employeeTable['data']);\n      this.dataSource.data = employeeTable['data'] as TableStructure[];\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n\n  }\n\n  showDetails(rowDetils){\n    console.log(rowDetils);\n  }\n  \n\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"ID\">\n      <th mat-header-cell *matHeaderCellDef> ID </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"Name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.employee_name}} </td>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"Salary\">\n      <th mat-header-cell *matHeaderCellDef> Salary </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.employee_salary}} </td>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"Age\">\n      <th mat-header-cell *matHeaderCellDef> Age </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.employee_age}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"Details\">\n        <th mat-header-cell *matHeaderCellDef> Details </th>\n        <td mat-cell *matCellDef=\"let element\">\n            <button mat-button (click)=\"showDetails(element)\" [routerLink]=\"['/employee', element.id]\"> Show </button>\n        </td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  myForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router:Router,\n    private authService:AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.myForm = this.fb.group({\n      email: ['',[\n        Validators.required,\n        Validators.email,\n      ]],\n      password: ['', [\n        Validators.required\n      ]]\n    });\n  }\n\n  get email(){\n    return this.myForm.get('email');\n  }\n\n  get password(){\n    return this.myForm.get('password');\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.myForm.value.email,\n      password: this.myForm.value.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data['success']){\n        console.log(data);\n        this.authService.storeUserData(data['token'], data['user'])\n        this.router.navigate(['employee']);\n      }\n      else{\n        console.log(data);\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n}\n","<div class=\"example-container\">\n    <div class=\"form-container\">\n    <br>\n    <br>\n    <br>\n    <form [formGroup]=\"myForm\" (submit)=\"onLoginSubmit()\">\n      <mat-form-field class=\"form-field\" appearance=\"outline\">\n        <mat-label> Email </mat-label>\n        <input matInput formControlName=\"email\" required>\n        <mat-error *ngIf=\"email.invalid && email.errors?.required\">\n          Cant be Empty\n        </mat-error>\n        <mat-error *ngIf=\"email.invalid && email.errors?.email\">\n          Email invalid\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"form-field\" appearance=\"outline\">\n        <mat-label> Password </mat-label>    \n        <input matInput formControlName=\"password\" type=\"password\">\n        <mat-error *ngIf=\"password.invalid\">\n          Cant be empty\n        </mat-error>\n      </mat-form-field>\n      <br>\n        <button mat-raised-button [disabled]=\"myForm.invalid\" color=\"primary\" type=\"submit\">Log In</button>\n      </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n    console.log(\"logged out !\");\n    this.authService.logout();\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/employee']\">Navbar</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav navbar-left\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" [routerLink]=\"['/employee']\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav navbar-right\">\n      <li class=\"nav-item\">\n        <a *ngIf=\"authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/employee']\">Employee</a>\n      </li>\n      <li class=\"nav-item\">\n        <a *ngIf=\"!authService.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/']\">Login</a>\n      </li>\n      <li class=\"nav-item\">\n        <a *ngIf=\"authService.loggedIn()\"  class=\"nav-link\" (click)=\"onLogoutClick()\" [routerLink]=\"['/']\">Logout</a>\n      </li>\n    </ul>\n    </div>\n</nav>","import {Injectable} from '@angular/core';\nimport {Router, CanActivate} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n    constructor(\n        private authService:AuthService,\n        private router:Router\n    ){}\n\n    canActivate(){\n        if(this.authService.loggedIn()){\n            return true;\n        }\n        else{\n            this.router.navigate(['/']);\n            return false;\n        }\n    }\n}","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n  constructor(private el: ElementRef) { }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight('yellow');\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight(null);\n  }\n\n  private highlight(color: string) {\n    this.el.nativeElement.style.backgroundColor = color;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\n//import { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  helper = new JwtHelperService();\n  table:Object;\n  \n  constructor(\n    private http:HttpClient\n    ) { }\n\n  authenticateUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/authenticate', user, {headers: headers});\n  }\n\n  getEmployeeTable(){\n    let headers = new HttpHeaders();\n    this.loadToken();\n    headers=headers.append('Content-Type', 'application/json');\n    if(this.authToken != null){\n      headers=headers.append('Authorization', this.authToken);\n    }\n    console.log(headers);\n    return this.http.get('http://localhost:3000/employees', {headers: headers});\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    this.loadToken();\n    return !(this.helper.isTokenExpired(this.authToken));\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  storeTable(eTable){\n    localStorage.setItem('table', JSON.stringify(eTable));\n    this.table = eTable;\n    console.log(this.table);\n  }\n\n  loadTable(){\n    const token = JSON.parse(localStorage.getItem('table'));\n    this.table = token;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}